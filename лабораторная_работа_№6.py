# -*- coding: utf-8 -*-
"""лабораторная работа №6

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10E6ttldTVi9NDwcvltcX13x8TfjPNJMO
"""

import matplotlib.pyplot as plt


celsius = [[-67.0], [-34.0], [0], [54.0], [100]]
farenheit = [[-88.6], [-29.2], [32.0],[93.2],[129.2]]

import numpy as np

x_range = np.arange(-70, 120)
y_range = x_range*1.8+32

plt.figure(figsize=(15,8), dpi=50)
plt.scatter(celsius, farenheit, label="Входные значения", color="green", marker="$f$")
plt.xlabel("celsius")
plt.ylabel("farenheit")
plt.legend()
plt.grid(True)
plt.show()

for c,f in zip(celsius, farenheit):
  print(f"цельсия{c}= фаренгейт {f}")

from sklearn.linear_model import LinearRegression

lr = LinearRegression()
lr.fit(celsius, farenheit)
lr.predict([[256], [123]])
lr.coef_
lr.intercept_
celsius_test = [[-50], [10], [30], [20], [10], [70], [87]]
farenheit_test = lr.predict(celsius_test)
farenheit_test

for c,f in zip(celsius_test, farenheit_test):
  print(f"цельсия {c} фаренгейта {f}" )

import matplotlib.pyplot as plt

farenheit = [[0], [10],[20], [30]]
kelvin = [[255.372], [260.928], [266.483], [272.039]]

import numpy as np

x_range = np.arange(-70, 120)
y_range = x_range*1.8+32

plt.figure(figsize=(15,8), dpi=50)
plt.scatter(farenheit, kelvin, label="Входные значения", color="green", marker="$f$")
plt.xlabel("farenheit")
plt.ylabel("kelvin")
plt.legend()
plt.grid(True)
plt.show()

for c,f in zip(farenheit, kelvin):
  print(f"фаренгейт{c}= кельвин{f}")

from sklearn.linear_model import LinearRegression

lr = LinearRegression()
lr.fit(farenheit, kelvin)
lr.predict([[256], [123]])
lr.coef_
lr.intercept_
farenheit_test = [[-50], [10], [30], [20], [10], [70], [87]]
kelvin_test = lr.predict(celsius_test)
print(kelvin_test)

for c,f in zip(farenheit_test, kelvin_test):
  print(f"фаренгейта {c} кельвина {f}" )

import matplotlib.pyplot as plt
import numpy as np

names = ['group_a', 'group_b', 'group_c']
values = [1, 10, 100]

plt.figure(figsize=(9, 3))

plt.subplot(131)
plt.bar(names, values)
plt.subplot(132)
plt.scatter(names, values)
plt.subplot(133)
plt.plot(names, values)
plt.show()

import math
print(math.e)
print(math.pi)
print(math.nan)
print(math.factorial(7))
print(math.gcd(7, 64))